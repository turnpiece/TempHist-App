# ios/fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_KEY_ID'],
      issuer_id: ENV['APP_STORE_ISSUER_ID'],
      key_content: ENV['APP_STORE_PRIVATE_KEY'],
      in_house: false
    )

    match(
      type: "appstore",
      app_identifier: ENV['APP_IDENTIFIER'],
      readonly: false,
      git_url: ENV['MATCH_GIT_URL'],
      api_key: api_key
    )

    profile_mapping = lane_context[SharedValues::MATCH_PROVISIONING_PROFILE_MAPPING]
    profile_path = profile_mapping[ENV["APP_IDENTIFIER"]]
    
    UI.message("Using provisioning profile at path: #{profile_path}")
    
    update_project_provisioning(
      xcodeproj: "Runner.xcodeproj",
      build_configuration: "Release",
      target_filter: "Runner",
      code_signing_identity: "Apple Distribution",
      profile: profile_path
    )    

    build_app(
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          ENV["APP_IDENTIFIER"] => "match AppStore #{ENV["APP_IDENTIFIER"]}"
        },
        provisioningProfileSpecifier: "match AppStore #{ENV["APP_IDENTIFIER"]}",
        signingStyle: "manual",
        signingCertificate: "Apple Distribution",
        teamID: ENV["APP_STORE_TEAM_ID"]
      }
    )    

    upload_to_testflight(
      api_key: api_key,
      app_identifier: ENV['APP_IDENTIFIER'],
      team_id: ENV['APP_STORE_TEAM_ID']
    )
  end
end